{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joshua_sese/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge2/src/components/Search.js\";\n// import React, {useState} from \"react\";\nimport React from \"react\";\n\nfunction Search({\n  trans\n}) {\n  //const [typedSearch, setTypedSearch] = useState(\"All\");\n  // function handleSearchChange(event) {\n  //   // we could pass up the whole event object via onSearchChange\n  //   // but passing *only* the value makes the data easier to work with in the parent\n  //   onSearchChange(event.target.value);\n  // }\n  // const transToDisplay = trans.filter((tran) => {\n  //   if (typedSearch === \"All\"){\n  //     return true;\n  //   }\n  //   return tran.category === typedSearch;\n  // });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui large fluid icon input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search your Recent Transactions\",\n      onChange: () => console.log(\"Searching...\") //value={typedSearch}\n      //onChange={handleSearchChange}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"circular search link icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/joshua_sese/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge2/src/components/Search.js"],"names":["React","Search","trans","console","log"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAyB;AACvB;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iCAFd;AAGE,MAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAHlB,CAIE;AACA;;AALF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KA3BQH,M;AA6BT,eAAeA,MAAf","sourcesContent":["// import React, {useState} from \"react\";\nimport React from \"react\";\n\nfunction Search({trans}) {\n  //const [typedSearch, setTypedSearch] = useState(\"All\");\n\n  // function handleSearchChange(event) {\n  //   // we could pass up the whole event object via onSearchChange\n  //   // but passing *only* the value makes the data easier to work with in the parent\n  //   onSearchChange(event.target.value);\n  // }\n\n  // const transToDisplay = trans.filter((tran) => {\n  //   if (typedSearch === \"All\"){\n  //     return true;\n  //   }\n  //   return tran.category === typedSearch;\n  // });\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Search your Recent Transactions\"\n        onChange={() => console.log(\"Searching...\")}\n        //value={typedSearch}\n        //onChange={handleSearchChange}\n      />\n      <i className=\"circular search link icon\" ></i>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}