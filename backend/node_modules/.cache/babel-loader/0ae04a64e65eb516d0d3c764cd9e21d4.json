{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joshua_sese/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge2/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction Search({\n  trans\n}) {\n  _s();\n\n  const [typedSearch, setTypedSearch] = useState(\"All\"); // function handleSearchChange(event) {\n  //   // we could pass up the whole event object via onSearchChange\n  //   // but passing *only* the value makes the data easier to work with in the parent\n  //   onSearchChange(event.target.value);\n  // }\n\n  const transToDisplay = trans.filter(tran => {\n    if (typedSearch === \"All\") {\n      return true;\n    }\n\n    return tran.category === typedSearch;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui large fluid icon input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search your Recent Transactions\" // onChange={() => console.log(\"Searching...\")}\n      ,\n      value: typedSearch,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"circular search link icon\",\n      onClick: handleCategoryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"6jS/++/KTb1mUmm33/+wip0iAm0=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/joshua_sese/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge2/src/components/Search.js"],"names":["React","useState","Search","trans","typedSearch","setTypedSearch","transToDisplay","filter","tran","category","handleSearchChange","handleCategoryChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAGA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAyB;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C,CADuB,CAGvB;AACA;AACA;AACA;AACA;;AAEA,QAAMK,cAAc,GAAGH,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAU;AAC5C,QAAIJ,WAAW,KAAK,KAApB,EAA0B;AACxB,aAAO,IAAP;AACD;;AACD,WAAOI,IAAI,CAACC,QAAL,KAAkBL,WAAzB;AACD,GALsB,CAAvB;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iCAFd,CAGE;AAHF;AAIE,MAAA,KAAK,EAAEA,WAJT;AAKE,MAAA,QAAQ,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAyC,MAAA,OAAO,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA3BQT,M;;KAAAA,M;AA6BT,eAAeA,MAAf","sourcesContent":["import React, {useState} from \"react\";\n\n\nfunction Search({trans}) {\n  const [typedSearch, setTypedSearch] = useState(\"All\");\n\n  // function handleSearchChange(event) {\n  //   // we could pass up the whole event object via onSearchChange\n  //   // but passing *only* the value makes the data easier to work with in the parent\n  //   onSearchChange(event.target.value);\n  // }\n\n  const transToDisplay = trans.filter((tran) => {\n    if (typedSearch === \"All\"){\n      return true;\n    }\n    return tran.category === typedSearch;\n  });\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Search your Recent Transactions\"\n        // onChange={() => console.log(\"Searching...\")}\n        value={typedSearch}\n        onChange={handleSearchChange}\n      />\n      <i className=\"circular search link icon\" onClick={handleCategoryChange}></i>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}